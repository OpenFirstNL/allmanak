include shared/http.conf;
server {
	listen 80;
	server_name localhost;

	# use a variable in proxy_pass to force re-resolution of the DNS names (https://serverfault.com/a/593003)
	# this way v0 becomes an optional container start, and if started nginx won't need reconfiguration
	resolver 127.0.0.11 ipv6=off; # docker internal DNS
	set $v0 "http://api-rest-v0:3000/"; # v0 proxy_pass
	proxy_connect_timeout 3s; # by default 60s, 'Host is unreachable' (after manual start & stop) otherwise takes ages...

	location / {
		include shared/static-or-node;
	}

	location /image/ {
		alias /image/;
		try_files $uri =404;
	}

	location @app {
		proxy_pass http://app:3000;
	}

	location /mail/ {
		proxy_pass http://fakemail:8025/;
	}

	# Proxy api requests to the PostgREST
	location /rest-api/ {
		return 302 http://localhost/api/;
		location ~ ^/rest-api/v0/(?<realuri>.*)$ {
			# see "When variables are used in proxy_pass" in http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
			proxy_pass "$v0$realuri?$args";
			# The 3s proxy_connect_timeout will make a 502 a 504 Gateway Time-out, so rewrite as 502 in this case
			error_page 502 504 = @v0-not-started;

			# Rewrite Content-Location header
			proxy_hide_header Content-Location;
			add_header Content-Location /rest-api/v0$upstream_http_content_location;
			proxy_hide_header Location;
			add_header Location /rest-api/v0$upstream_http_location;

			include shared/v0-deprecation.conf;

			location ~ ^/rest-api/v0/$ {
				include shared/v0-deprecation.conf;
				include shared/v0-openapi-filter.conf;
				proxy_pass "$v0";
				# The 3s proxy_connect_timeout will make a 502 a 504 Gateway Time-out, so rewrite as 502 in this case
				error_page 502 504 = @v0-not-started;
			}
		}
		location /rest-api/v1/ {
			proxy_pass http://api-rest-v1:3000/;

			# Rewrite Content-Location header
			proxy_hide_header Content-Location;
			add_header Content-Location /rest-api/v1$upstream_http_content_location;
			proxy_hide_header Location;
			add_header Location /rest-api/v1$upstream_http_location;

			location = /rest-api/v1/ {
				include shared/v1-openapi-filter.conf;
				proxy_pass http://api-rest-v1:3000/;
			}
		}
	}
	location @v0-not-started {
		return 502 "There was a '502 Bad Gateway' error in resolving $v0\nIn development mode (currently running), v0 isn't started by default.\n\nTo start the v0 API manually:\n${dollar} docker-compose -f docker-compose.yml -f docker-compose-dev.yml run -d --no-deps --use-aliases --name allmanak_api-rest-v0_manual api-rest-v0 /bin/sh -c \"exec postgrest /etc/postgrest.conf\"\n\nTo stop it run:\n${dollar} docker rm -f allmanak_api-rest-v0_manual\n\nAnother option is to comment the 'command: /bin/true' line under 'api-rest-v0' in 'docker-compose-dev.yml' and run:\n${dollar} docker-compose -f docker-compose.yml -f docker-compose-dev.yml up -d api-rest-v0";
	}
}

# Proxy 'live reload' of sapper
server {
	listen 10000;
	server_name localhost;
	location / {
		proxy_pass http://app:10000;
	}
}